fields:
       
  emailAddress:
    required:
      msg:       form.error.requiredField
    sfStringValidator:
      max:       150
      max_error: form.error.max150
    sfEmailValidator:
      strict:       true
      email_error:  form.error.invalidEmail
    sfCallbackValidator:
      callback:      [UserSitePeer, uniqueEmailAddress]
      invalid_error: form.error.takenEmail
       
  firstName:
    required:
      msg:       form.error.requiredField
    sfStringValidator:
      max:       25
      max_error: form.error.max25
  
  password:
    required:
      msg:       form.error.requiredField
    sfStringValidator:
      max:       32
      max_error: form.error.between5and15
      min:       6
      min_error: form.error.between5and15
      
  passwordConfirm:
    required:
      msg:       form.error.requiredField
    sfStringValidator:
      max:       32
      max_error: form.error.between5and15
    sfCompareValidator:
      check:    password
      compare_error: form.error.passwordConfirm
      
  startBankroll:
    required:
      msg:       form.error.requiredField
    sfNumberValidator:
      nan_error: form.error.invalidNumber
      
  phoneDdd:
    sfNumberValidator:
      min: 10
      min_error: Informe um DDD válido
      nan_error: form.error.invalidNumber
    sfCallbackValidator:
      callback:      [UserSitePeer, validatePhoneNumber]
      invalid_error: nullError
      
  phoneNumber:
    sfRegexValidator:
      match:        Yes
      match_error:  Informe um número de telefone válido
      pattern:      /^9?[2-9][0-9]{3}\-[0-9]{4}$/si
    sfCallbackValidator:
      callback:      [UserSitePeer, validatePhoneNumber]
      invalid_error: nullError