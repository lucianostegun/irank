validators:      
  validateDate:
    class:           sfCallbackValidator
    param:
      callback:      [Validate, validateDate]
      invalid_error: form.error.invalidDate
      
fields:
       
  eventName:
    required:
      msg:       form.error.requiredField
    sfCallbackValidator:
      callback:      [EventPersonalPeer, uniqueEventName]
      invalid_error: form.error.takenEventName
       
  eventDate:
    required:
      msg:       form.error.requiredField
    validateDate:
       
  eventPlace:
    required:
      msg:       form.error.requiredField
       
  paidPlaces:
    sfNumberValidator:
      min_error: 1
      min_error: form.error.greaterThan0
      nan_error: form.error.invalidNumber
       
  eventPosition:
    sfNumberValidator:
      min_error: 1
      min_error: form.error.greaterThan0
      nan_error: form.error.invalidNumber
       
  players:
    sfNumberValidator:
      min_error: 2
      min_error: form.error.greaterThan0
      nan_error: form.error.invalidNumber
       
  buyin:
    required:
      msg:       form.error.requiredField
    sfNumberValidator:
      min:       0
      min_error: form.error.greaterEqual0
      nan_error: form.error.greaterEqual0
       
  rebuy:
    required:
      msg:       form.error.requiredField
    sfNumberValidator:
      min:       0
      min_error: form.error.greaterEqual0
      nan_error: form.error.greaterEqual0
       
  addon:
    required:
      msg:       form.error.requiredField
    sfNumberValidator:
      min:       0
      min_error: form.error.greaterEqual0
      nan_error: form.error.greaterEqual0
       
  prize:
    required:
      msg:       form.error.requiredField
    sfNumberValidator:
      min:       0
      min_error: form.error.greaterEqual0
      nan_error: form.error.greaterEqual0
       
  comments:
    sfStringValidator:
      max:       140
      max_error: form.error.max140